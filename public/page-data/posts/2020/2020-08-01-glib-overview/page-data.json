{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/posts/2020/2020-08-01-glib-overview/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"GLib JavaScript Library Overview\",\n  \"date\": \"2020-08-01T00:00:00.000Z\",\n  \"published\": true,\n  \"cover\": \"./img/glib-overview.png\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this blog post, we take a look at the JavaScript library known as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GLib\"), \". So let's not waste any words and get started.\"), mdx(\"h2\", null, \"Getting Started\"), mdx(\"p\", null, \"Now, to get started, initially you would have to download the source code to your dev machine, but I will use a service that lets you turn any \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"github\"), \" file or folder into a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cdn\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"link\"), \".\"), mdx(\"p\", null, \"So the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cdn\"), \" link for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Glib\"), \" would be:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"https://cdn.jsdelivr.net/gh/GladiatorMC/glib/GLib-v1.8.js\\n\")), mdx(\"p\", null, \"Inside your sandbox directory we can create the following files:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- index.html\\n- app.js\\n\")), mdx(\"p\", null, \"Inside of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.html\"), \" we want:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\n    <title>GLib Sandbox</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://unpkg.com/wingcss\\\" />\\n  </head>\\n  <body>\\n    <h1>GLib Sandbox</h1>\\n    <script src=\\\"https://cdn.jsdelivr.net/gh/GladiatorMC/glib/GLib-v1.8.js\\\"></script>\\n    <script src=\\\"./app.js\\\"></script>\\n  </body>\\n</html>\\n\")), mdx(\"p\", null, \"Basically I am using the emmett shortcut of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"!\"), \" and then adding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Wing CSS\"), \" that I just found and using as an excuse just to try it out.\"), mdx(\"p\", null, \"And then adding our custom JavaScript file.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reminder: I am using v1.8\")), mdx(\"h2\", null, \"Printing\"), mdx(\"p\", null, \"The library provides us \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"3\"), \" ways to print to the console. In which two ways provide the normal \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"console.log()\"), \" and the other provides us a bit of a helper as you will see.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"print('Hello World'); // Output: Hello World\\nlog('Hello World'); // Output: Hello World\\ndbg('Hello World'); // Output: Debug: Hello World\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dbg()\"), \" function under the hood returns a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"console.warn()\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function dbg(...text) {\\n  return console.warn('Debug:', ...text);\\n}\\n\")), mdx(\"h2\", null, \"Parse HTML\"), mdx(\"p\", null, \"Now being able to have your own mini DOM in your JavaScript and HTML file is very helpful, but we can also do that too with GLib. The API is provided in JavaScript, but GLib makes it easy.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"let nanoDom = parseHTML(`\\n    <!DOCTYPE html>\\n    <html>\\n       <head>\\n        <title>Document</title>\\n       </head>\\n        <body>\\n            <h1>Testing</h1>\\n            <h2>News</h2>\\n        </body>\\n    </html>\\n`);\\n\")), mdx(\"p\", null, \"Now if we want we can \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"log(nanoDom)\"), \".\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Remember: \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"log()\"), \" is a function provided by GLib.\")), mdx(\"p\", null, \"We can also perform normal DOM methods on it too. Normally, we would do something like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"let heading = document.querySelector('h2');\\n\")), mdx(\"p\", null, \"But we can do the same with the custom mini DOM we created.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"let heading = nanoDom.querySelector('h2');\\nprint(heading); // <h2>News</h2>\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"print()\"), \" is provided by GLib.\")), mdx(\"p\", null, \"Now remember that we did not have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h2\"), \" in our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.html\"), \".\"), mdx(\"h2\", null, \"Custom RGB\"), mdx(\"p\", null, \"Don't feel like creating colors, GLib provides us with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RandomColor()\"), \" function. The result is a random RGB color will be generated and we are provided a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hex\"), \" value.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Be on the lookout for a color pallette generator project where we will use GLib\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"RandomColor();\\n\\n// Result\\n{\\n    rgb: {\\n        r: 83,\\n        g: 156,\\n        b: 178\\n    },\\nhex: \\\"#539cb2\\\"\\n}\\n\")), mdx(\"h2\", null, \"Random ID\"), mdx(\"p\", null, \"With GLib we can generate a random ID.\"), mdx(\"p\", null, \"We can pass in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"options\"), \" object with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"length\"), \" property.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"RandomID((options = { length: 10 }));\\n\")), mdx(\"p\", null, \"And if you were to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"log\"), \" that you would see it.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Be in the lookout for a password generator where we modify the library code to create a password generator function. Also we will create a frontend for it\")), mdx(\"h2\", null, \"Conclusion\"), mdx(\"p\", null, \"Now while I can't review all the features of this library, but at least provide a overview of the features that made me interested in taking a look at it.\"), mdx(\"p\", null, \"The Repo for the library is: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/GladiatorMC/glib\"\n  }), \"https://github.com/GladiatorMC/glib\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"GLib JavaScript Library Overview","date":"2020 August 1st","cover":{"publicURL":"/static/glib-overview-92392e04be5453166b8abadfeef73e6a.png","childImageSharp":{"sizes":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='225'%20viewBox='0%200%20400%20225'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20113v112h401V0H0v113m178-74l4%203c3%202%204%205%201%208l-2%203-4-3c-5-2-5-1-1%204%201%202%203%203%206%204%203%200%206%202%209%204l4%204%203-2%203-3-5-6-4-7c0-3-2-6-4-8l-10-1m42%204l-4%203c0%203-21%2023-23%2022l-3%203-4%204c-2%200-6%203-9%207-6%206-6%206-5%208%203%206%205%206%2012-1l8-9c0-2%202-3%203-4%203%200%203-1%203-3-1-2%2019-23%2022-23l3-4c4-5%202-7-3-3m-18%2025l-2%203%205%205c4%204%205%207%205%209%200%204%203%207%208%208%206%201%207%200%203-3-5-3-5-6-2-9%202-1%202-1%206%201%203%202%204%202%204%201%200-3-5-8-9-9-3%200-6-2-10-5l-5-4-3%203M75%2069c-4%204-3%2023%201%2025h10l2%201c2%200%202-1%202-7v-8h-4c-3%200-4%200-4%202l1%202%201%203-2%204-1-10%201-10%202%202c0%205%206%204%206%200%200-7-11-10-15-4m19%2012v14h7c5%200%206%200%206-2s-1-2-3-2h-3V66h-7v15m25-1v15h6c8%200%208-1%208-10%200-10-1-12-5-11-3%201-3%201-3-3s-1-5-3-5h-3v14m-9-5l-1%2010v10h6V85c0-11%200-11-2-11l-3%201m222%2022c-12%205-19%2015-17%2027%202%2010%208%2017%2023%2023%2012%205%2016%209%2016%2012%200%2012-17%2013-27%203l-3-3-5%203c-10%205-10%204-6%209%2013%2020%2051%2018%2058-4%204-16-4-27-26-37-9-3-12-6-12-10%200-9%2010-11%2017-5l3%204%207-4c7-5%207-4%204-9-5-6-13-10-22-10l-10%201m-50%2034c-1%2039%200%2038-9%2038-5%200-10-4-11-8-1-1-15%206-15%208%200%203%207%2010%2012%2012%2015%208%2032%203%2038-9%202-4%203-6%203-40V97h-18v34M44%20110c-3%202-3%202-3%2013s0%2011%203%2013c3%203%208%203%2012%200%203-4%203-21%200-25-2-3-9-4-12-1m37%207c-3%200-5%204-5%2011%200%208%205%2012%2011%209%204-2%204-8%201-8-2%200-3%201-3%202-1%203-2%203-3%200%200-3%200-3%204-3s4%200%204-4c0-5-3-8-9-7m-21%202l4%2018h3c3%200%203-1%205-8%203-11%203-12%200-12s-3%200-4%209l-1-3c-1-6-1-6-4-6s-3%200-3%202m33%208c0%2011%200%2011%203%2010%203%200%203-1%203-7s1-7%203-7l2-4c0-2-2-3-4-1h-1l-3-1h-3v10m13-7l2%2010c1%207%202%207%205%207%202%200%203%200%205-10l2-10h-3c-3%200-3%200-4%206%200%206-1%206-1-1-1-4-1-5-4-5-2%200-2%200-2%203m16%207c0%2010%200%2010%202%2010%204%201%204%201%204-10v-10h-6v10m11-8c-3%203-3%2014%200%2017%204%204%2013%201%2012-4-1-3-5-3-6%200%200%203-2%203-2-1%200-3%200-3%204-3%204-1%205-4%203-9-2-3-9-3-11%200m14-1l3%2017%202%202c3%200%204-2%204-7%200-3%201-2%202%203%200%204%201%204%203%205%203%200%203%200%204-12l2-9h-3c-2%200-2%201-3%205v6l-1-6c-2-8-6-7-6%201%200%204-2%201-2-3%200-2%200-3-2-3l-3%201'%20fill='%23639'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.7793594306049823,"src":"/static/92392e04be5453166b8abadfeef73e6a/40ffe/glib-overview.png","srcSet":"/static/92392e04be5453166b8abadfeef73e6a/46604/glib-overview.png 500w,\n/static/92392e04be5453166b8abadfeef73e6a/40ffe/glib-overview.png 960w","sizes":"(max-width: 960px) 100vw, 960px"}}}},"fields":{"readingTime":{"text":"3 min read","words":561}}}},"pageContext":{"slug":"/posts/2020/2020-08-01-glib-overview/"}},"staticQueryHashes":["4080856488"]}